{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-navbar/nav-bar.component.css","webpack:///./src/app/app-navbar/nav-bar.component.html","webpack:///./src/app/app-navbar/nav-bar.component.ts","webpack:///./src/app/app-routes.routing.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/main-page/add-random-messaged/add-random-messaged.component.css","webpack:///./src/app/main-page/add-random-messaged/add-random-messaged.component.html","webpack:///./src/app/main-page/add-random-messaged/add-random-messaged.component.ts","webpack:///./src/app/main-page/add-tip/add-tip.component.css","webpack:///./src/app/main-page/add-tip/add-tip.component.html","webpack:///./src/app/main-page/add-tip/add-tip.component.ts","webpack:///./src/app/main-page/current-status/current-status.component.css","webpack:///./src/app/main-page/current-status/current-status.component.html","webpack:///./src/app/main-page/current-status/current-status.component.ts","webpack:///./src/app/main-page/customers.services.ts","webpack:///./src/app/main-page/main-page.component.css","webpack:///./src/app/main-page/main-page.component.html","webpack:///./src/app/main-page/main-page.component.ts","webpack:///./src/app/main-page/models/customer.model.ts","webpack:///./src/app/main-page/models/publicMsg.model.ts","webpack:///./src/app/main-page/profile-edit/profile-edit.component.css","webpack:///./src/app/main-page/profile-edit/profile-edit.component.html","webpack:///./src/app/main-page/profile-edit/profile-edit.component.ts","webpack:///./src/app/navigation.services.ts","webpack:///./src/app/not-found-page/not-found-page.component.css","webpack:///./src/app/not-found-page/not-found-page.component.html","webpack:///./src/app/not-found-page/not-found-page.component.ts","webpack:///./src/app/shared/PublicMsg.services.ts","webpack:///./src/app/shared/data-storage.services.ts","webpack:///./src/app/shared/filter.pipe.ts","webpack:///./src/app/shared/my-animations.ts","webpack:///./src/app/shared/user-alert.services.ts","webpack:///./src/app/user.services.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".navbar-default {\\r\\n    border: none;\\r\\n    background-color: rgba(255, 255, 255, 0.7);\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.placeholder {\\r\\n    height: 50px;\\r\\n}\"","module.exports = \" <!-- nav-bar -->\\r\\n <nav class=\\\"navbar navbar-fixed-top navbar-default\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <!-- navbar header -->\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\" aria-expanded=\\\"false\\\">\\r\\n          <!-- the hamburger -->\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n          <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">Jerusalem Runn<i class=\\\"fab fa-drupal\\\"></i>rs </a>\\r\\n      </div>\\r\\n      <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <ng-template [ngIf]='isAuthenticated()'>\\r\\n            <li [routerLinkActiveOptions]=\\\"{exact: 'full'}\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"/\\\">ראשי</a></li>\\r\\n            <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"add-tip\\\">הוסף טיפ ועדכן לקוח</a></li>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]='!isAuthenticated()'>\\r\\n          <li class=\\\"p-2\\\"><a routerLink='sign-in'>התחברות</a></li>\\r\\n          <li class=\\\"p-2\\\"><a routerLink='sign-up'>הרשמה</a></li>\\r\\n        </ng-template>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <!-- todo make it visible only if user is logged! ! ! -->\\r\\n          <ng-template [ngIf]='isAuthenticated()'>\\r\\n            <li> <a href=\\\"\\\"><i class=\\\"fas fa-user\\\"></i> עריכת פרופיל</a></li>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]='isAuthenticated()'>\\r\\n            <li style=\\\"margin-right:10px;\\\" (click)='onLogOut()'><a><i class=\\\"fas fa-sign-out-alt\\\"></i></a></li>\\r\\n          </ng-template>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <div class=\\\"placeholder\\\">\\r\\n  </div>\\r\\n  \"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onLogOut() {\r\n    this.authService.logOut();\r\n  }\r\n  isAuthenticated() {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { AddTipComponent } from './main-page/add-tip/add-tip.component';\r\nimport { ProfileEditComponent } from './main-page/profile-edit/profile-edit.component';\r\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\r\nimport { CurrentStatusComponent } from './main-page/current-status/current-status.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { SigninComponent } from './auth/signin/signin.component';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { AddRandomMessagedComponent } from './main-page/add-random-messaged/add-random-messaged.component';\r\n\r\nconst AppRoutes: Routes = [\r\n  {\r\n  path: '', component: CurrentStatusComponent, canActivate: [AuthGuard]\r\n},\r\n{\r\n  path: 'sign-up', component: SignupComponent\r\n},\r\n{\r\n  path: 'sign-in', component: SigninComponent\r\n},\r\n{\r\n  path: 'add-tip', component: AddTipComponent, canActivate: [AuthGuard]\r\n},\r\n{\r\n  path: 'add-random-msg', component: AddRandomMessagedComponent, canActivate: [AuthGuard]\r\n},\r\n{\r\n  path: 'profile-edit', component: ProfileEditComponent, canActivate: [AuthGuard]\r\n},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(AppRoutes)],\r\n\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <app-navbar></app-navbar>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n    <app-main-page></app-main-page>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { AuthService } from './auth/auth.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'jerusalem-runners';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyCDmFV0_CC6ltw8-mevf4qphUHgPvANgB0',\r\n      authDomain: 'jerusalem-runners.firebaseapp.com',\r\n    });\r\n    this.authService.getToken();\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavBarComponent } from './app-navbar/nav-bar.component';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { AddTipComponent } from './main-page/add-tip/add-tip.component';\r\nimport { AppRoutingModule } from './app-routes.routing';\r\nimport { CustomerServices } from './main-page/customers.services';\r\nimport { ProfileEditComponent } from './main-page/profile-edit/profile-edit.component';\r\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\r\nimport { NavigationServices } from './navigation.services';\r\nimport { UserServices } from './user.services';\r\nimport { CurrentStatusComponent } from './main-page/current-status/current-status.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { DataStoreServices } from './shared/data-storage.services';\r\nimport { FilterPipe } from './shared/filter.pipe';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { SigninComponent } from './auth/signin/signin.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { PublicMsgServices } from './shared/PublicMsg.services';\r\nimport { AddRandomMessagedComponent } from './main-page/add-random-messaged/add-random-messaged.component';\r\nimport { UserAlertServices } from './shared/user-alert.services';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    MainPageComponent,\r\n    AddTipComponent,\r\n    ProfileEditComponent,\r\n    NotFoundPageComponent,\r\n    CurrentStatusComponent,\r\n    FilterPipe,\r\n    SignupComponent,\r\n    SigninComponent,\r\n    AddRandomMessagedComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [\r\n    CustomerServices,\r\n    UserServices,\r\n    NavigationServices,\r\n    DataStoreServices,\r\n    AuthService,\r\n    AuthGuard,\r\n    PublicMsgServices,\r\n    UserAlertServices\r\n  ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n\r\n}\r\n","import * as firebase from 'firebase';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class AuthService {\r\n  token: string;\r\n  loading = false;\r\n  successMessage = false;\r\n  constructor(private router: Router) {}\r\n\r\n  signupUser(email: string, password: string) {\r\n    this.loading = true;\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).\r\n    then((response) => {\r\n      this.loading = false;\r\n      this.router.navigate(['/sign-in']);\r\n      this.successMessage = true;\r\n    }).\r\n      catch(\r\n        (error: Error) => {\r\n          this.loading = false;\r\n          alert(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  signinUser(email: string, password: string) {\r\n    this.loading = true;\r\n    this.successMessage = false;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).\r\n    then(\r\n      response => {\r\n        this.router.navigate(['../']);\r\n        console.log(response);\r\n        firebase.auth().currentUser.getIdToken()\r\n         .then(\r\n           (token: string) => {\r\n             this.token = token;\r\n             localStorage.setItem('userId', token);\r\n            }\r\n         );\r\n      }\r\n    ).catch((error) => {\r\n      this.loading = false;\r\n      alert(error);\r\n    }\r\n    );\r\n  }\r\n\r\n  getToken() {\r\n    if (localStorage.getItem('userId')) {\r\n      const token = localStorage.getItem('userId');\r\n      this.token = token;\r\n    } else {\r\n      firebase.auth().currentUser.getIdToken()\r\n      .then(\r\n        (token: string) => this.token = token\r\n        );\r\n      }\r\n      return this.token;\r\n  }\r\n\r\n  removeToken() {\r\n    this.token = null;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.token != null;\r\n}\r\n\r\nlogOut() {\r\n  // todo make it async\r\n  if (confirm('?אתה בטוח שהינך רוצה להתנתק')) {\r\n  firebase.auth().signOut().then(function () {\r\n      localStorage.clear();\r\n    });\r\n    this.token = null;\r\n    this.loading = false;\r\n    this.router.navigate(['sign-in']);\r\n}\r\n}\r\n\r\n}\r\n","module.exports = \".loader {\\r\\n  border: 10px solid #f3f3f3; /* Light grey */\\r\\n  border-top: 10px solid #3498db; /* Blue */\\r\\n  border-radius: 50%;\\r\\n  width: 150px;\\r\\n  height: 150px;\\r\\n  -webkit-animation: spin 2s linear infinite;\\r\\n          animation: spin 2s linear infinite;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n@keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n.fa-check-circle {\\r\\n  font-size: 50px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <ng-template [ngIf]='!authService.loading'>\\n      <ng-template [ngIf]=\\\"authService.successMessage\\\">\\n          <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n            <h2 align=center>!ברוך הבא</h2>\\n            <h2 align=center>!נרשמת למערכת בהצלחה</h2>\\n            <h1 align=center>Jerusalem Runners</h1>\\n            <h3 class=\\\"alert-heading\\\" align=center>מאחלים לך המון בהצלחה והמון המון המון טיפים ויותר מזה נסיעה בטוחה ונעימה</h3>\\n            <hr>\\n              <p class=\\\"mb-0\\\" align=center>אנא התחברו</p>\\n            </div>\\n      </ng-template>\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n        <form (ngSubmit)=\\\"onSignIn(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\" align=center>\\n              <h1>התחברות</h1>\\n            </div>\\n            <div class=\\\"form-group\\\" align=center>\\n              <label for=\\\"email\\\">אימייל</label>\\n              <input class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"example@any.any\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel>\\n            </div>\\n            <div class=\\\"form-group\\\" align=center>\\n              <label for=\\\"email\\\">סיסמה</label>\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel>\\n            </div>\\n                <div class=\\\"form-group\\\" align=center>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">התחבר/י</button>\\n                  </div>\\n            <div class=\\\"form-group\\\" align=center>\\n              <p>?לא רשומים עדיין</p>\\n             <a routerLink=\\\"/sign-up\\\">לחצו כאן</a>\\n            </div>\\n          </form>\\n  <hr>\\n    </div>\\n  </ng-template>\\n  <ng-template [ngIf]='authService.loading'>\\n    <div class=\\\"form-group\\\" align=center>\\n      <div class=\\\"loader\\\"></div>\\n      <span class=\\\"help-box\\\">...מתחבר</span>\\n    </div>\\n  </ng-template>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSignIn(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.authService.signinUser(email, password);\n  }\n}\n","module.exports = \".loader {\\r\\n  border: 10px solid #f3f3f3; /* Light grey */\\r\\n  border-top: 10px solid #3498db; /* Blue */\\r\\n  border-radius: 50%;\\r\\n  width: 150px;\\r\\n  height: 150px;\\r\\n  -webkit-animation: spin 2s linear infinite;\\r\\n          animation: spin 2s linear infinite;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n@keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n<ng-template [ngIf]='!onLoading()'>\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <form (ngSubmit)=\\\"onSignUp(f)\\\" #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group\\\" align=center>\\r\\n            <h1>הרשמה</h1>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" align=center>\\r\\n            <label for=\\\"email\\\">אימייל</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"example@any.any\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" align=center>\\r\\n            <label for=\\\"email\\\">סיסמה</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" align=center>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">הרשמה</button>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" align=center>\\r\\n              <p>?רשומים כבר</p>\\r\\n             <a routerLink=\\\"/sign-in\\\">לחצו כאן</a>\\r\\n            </div>\\r\\n        </form>\\r\\n  </div>\\r\\n<hr>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template [ngIf]='onLoading()'>\\r\\n    <div class=\\\"form-group\\\" align=center>\\r\\n      <div class=\\\"loader\\\"></div>\\r\\n      <span class=\\\"help-box\\\">...מתחבר</span>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) { }\r\n  onSignUp(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n    this.authService.signupUser(email, password);\r\n  }\r\n  onLoading() {\r\n    return this.authService.loading ? true : false;\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"textarea.ng-invalid.ng-touched {\\r\\n    transition: 1s;\\r\\n    border: 1px solid red;\\r\\n\\r\\n}\"","module.exports = \"<ng-container *ngIf='failAlert'>\\r\\n    <div class=\\\"alert alert-danger alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n      <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <h3 align=center><i class=\\\"far fa-frown\\\"></i>{{ failAlert | async }}</h3>\\r\\n      </div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf='successAlert'>\\r\\n    <div class=\\\"alert alert-danger alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n      <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <h3 align=center><i class=\\\"far fa-frown\\\"></i>{{ successAlert }}</h3>\\r\\n      </div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf='successMessage'>\\r\\n    <div class=\\\"alert alert-success alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n      <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n        <h3 align=center><i class=\\\"far fa-grin-wink\\\"></i>{{ successMessage }}</h3>\\r\\n      </div>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf='!errorMessage && !successMessage'>\\r\\n\\r\\n  <div class=\\\"form-group\\\" align=right>\\r\\n    <h1>הוסף הודעות רנדומליות </h1>\\r\\n  </div>\\r\\n  <div class=\\\"messagesFomrWrapers\\\">\\r\\n    <form (ngSubmit)='onAddMessage(f)' [formGroup]='addMessageForm' #f>\\r\\n      \\r\\n      <div class=\\\"form-group col-md-12 col-sm-12\\\" align=center>\\r\\n        <h2>בחר באיזה נושא</h2>\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"selection\\\">\\r\\n          <option value=\\\"2\\\">הודעות קצרות על חרא לקוחות שלא מביאים טיפ</option>\\r\\n          <option value=\\\"1\\\">הודעות קצרות על אחלה לקוחות שכן מביאים טיפ</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-12 col-sm-12\\\" align=center>\\r\\n        <h2>תרשום הודעה קצרה וקולעת</h2>\\r\\n        <textarea formControlName=\\\"message\\\" cols=\\\"40\\\" rows=\\\"3\\\" maxlength=\\\"150\\\" placeholder=\\\"רשמו משהו עד 150 אותיות\\\"></textarea>\\r\\n        <ng-template [ngIf]='addMessageForm.invalid && addMessageForm.touched'>\\r\\n          <span>שליחוס אם אתה מעוניין לעלות הודעה אז היא לא יכולה להיות רייקה תמלא בבקשה</span>\\r\\n        </ng-template>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" align=center>\\r\\n        <button class='btn btn-success col-xs-12'>הוסף</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ng-container>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PublicMsgServices } from 'src/app/shared/PublicMsg.services';\r\nimport { NgForm, FormGroup, NgControl, FormControlName, FormControl, Validators } from '@angular/forms';\r\nimport { CustomerServices } from '../customers.services';\r\nimport { translateFromL } from 'src/app/shared/my-animations';\r\nimport { DataStoreServices } from 'src/app/shared/data-storage.services';\r\nimport { UserAlertServices } from 'src/app/shared/user-alert.services';\r\nimport { PublicMsg } from '../models/publicMsg.model';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-random-messaged',\r\n  templateUrl: './add-random-messaged.component.html',\r\n  styleUrls: ['./add-random-messaged.component.css'],\r\n  animations: [\r\n    translateFromL\r\n  ]\r\n})\r\nexport class AddRandomMessagedComponent implements OnInit {\r\n  errorMessage: string;\r\n  successMessage: string;\r\n  errorMsgArr = [\r\n    '...אנא בבקשה תמלא את הטפסים לפני ניסיון של שליחה',\r\n    'נסיך של אמא בבקשה תמלא את הטופס ואז רק תשלח תודה',\r\n    'יאללה איתך תמלא את הטופס לפני שליחה',\r\n    'לא מילאת את הטופס מה אתה חושב שיקרה הטופס יתמלא לבד שנקרא את המחשבות שלך לשם עדיין לא הגענו אז תמלא בבקשה'\r\n  ];\r\n  addMessageForm: FormGroup;\r\n\r\n  constructor(\r\n    private userAlertServices: UserAlertServices,\r\n    private dataStoreServices: DataStoreServices,\r\n    private authServices: AuthService,\r\n    private router: Router,\r\n    private publicMsgServices: PublicMsgServices\r\n    ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.addMessageForm = new FormGroup({\r\n      'message': new FormControl(null, Validators.required),\r\n      'selection': new FormControl(2, Validators.required)\r\n    }\r\n    );\r\n    this.userAlertServices.errorMsgAdded.subscribe(\r\n      (message: string) => {\r\n        this.errorMessage = message;\r\n      }\r\n      );\r\n    this.userAlertServices.successMsgAdded.subscribe(\r\n      (message: string) => {\r\n        this.successMessage = message;\r\n      }\r\n      );\r\n  }\r\n\r\n  onAddMessage(f) {\r\n    const selection = Number(this.addMessageForm.get('selection').value);\r\n    const formMsg = this.addMessageForm.get('message').value;\r\n    if (this.addMessageForm.invalid) {\r\n      const randomPick = Math.floor(Math.random() * this.errorMsgArr.length);\r\n      this.errorMessage = this.errorMsgArr[randomPick];\r\n      return;\r\n    } else if (formMsg.length > 150) {\r\n      this.errorMessage = 'משהו הישתבש אנא התחבר שנית';\r\n      this.authServices.removeToken();\r\n    } else {\r\n      const message = new PublicMsg(formMsg);\r\n      if (selection === 1) {\r\n        this.dataStoreServices.storeSuccessAlertMessages(message);\r\n      } else if (selection === 2) {\r\n        this.dataStoreServices.storeFailAlertMessages(message);\r\n      }\r\n    }\r\n  }\r\n  onDisableAlertMessage() {\r\n    this.errorMessage = null;\r\n    this.successMessage = null;\r\n    this.router.navigate(['./']);\r\n  }\r\n\r\n}\r\n","module.exports = \"input.ng-invalid.ng-touched {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  border: 16px solid #f3f3f3; /* Light grey */\\r\\n  border-top: 16px solid #3498db; /* Blue */\\r\\n  border-radius: 50%;\\r\\n  width: 120px;\\r\\n  height: 120px;\\r\\n  -webkit-animation: spin 2s linear infinite;\\r\\n          animation: spin 2s linear infinite;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n@keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n#tableWrap {\\r\\n  max-height: 300px !important;\\r\\n\\r\\n  color:red;\\r\\n}\\r\\n\\r\\n.bg-success {\\r\\n  background-color: rgb(164, 241, 164);\\r\\n}\\r\\n\\r\\n.text-gold {\\r\\n  color: orange;\\r\\n  font-weight: 600;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.500);\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  color: white;\\r\\n  text-shadow: 2px 2px 5px rgb(0, 0, 0);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"      \\r\\n          <ng-container *ngIf='successMessage'>\\r\\n            <div *ngIf='successMessage' class=\\\"alert alert-success alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n              <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n              <h3 align=center>{{ successMessage }}</h3>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n\\r\\n            <div *ngIf='failAlert' class=\\\"alert alert-danger alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n              <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n      \\r\\n              <h3 align=center>{{ failAlert }}</h3>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf='successAlert' class=\\\"alert alert-success alert-dismissible\\\" @translateFromL (click)=\\\"onDisableAlertMessage()\\\">\\r\\n              <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n      \\r\\n              <h3 align=center>{{ successAlert }}</h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          <div *ngIf='error' @translateFromL class=\\\"alert alert-danger\\\">\\r\\n            <a  class=\\\"close\\\" aria-label=\\\"close\\\" (click)=\\\"error = false\\\">&times;</a>\\r\\n            <h3 align=center>{{ error }}</h3>\\r\\n          </div>\\r\\n          <ng-container *ngIf='!successMessage'>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <p align=right [ngStyle]=\\\"{'color': userServices.getCurrentPauchStyle()}\\\">({{ currentUserPauch }}) - בפאוץ\\r\\n              כרגע</p>\\r\\n            <span class=\\\"help-block\\\" align=right *ngIf=\\\"currentUserPauch >= 100 && currentUserPauch < 200\\\">מברוק הגעת\\r\\n              ל100 אולי\\r\\n              עוד תגיע ל200</span>\\r\\n            <span class=\\\"help-block\\\" align=right *ngIf=\\\"currentUserPauch >= 200  && currentUserPauch < 220\\\">!עשית את זה\\r\\n              הגעת ל200\\r\\n              אלוף אתה</span>\\r\\n            <span class=\\\"help-block\\\" align=right *ngIf=\\\"currentUserPauch >= 220\\\">!!!ממשיך לעלות?? מטורף אתה תשלח לי\\r\\n              מייל איך אתה\\r\\n              עושה את זה בבקשה</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <h1 class=\\\"header\\\" align=center>הוספת טיפים ולקוח</h1>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n\\r\\n            <hr>\\r\\n            <form [formGroup]=\\\"addCustomerTipForm\\\" (ngSubmit)=\\\"onCustomerAdded()\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-1\\\">\\r\\n                  \\r\\n                </div>\\r\\n                <div *ngIf='!customerSelected' class=\\\"col-xs-4 form-group\\\" >\\r\\n                  <input placeholder=\\\"שם\\\" formControlName=\\\"customerName\\\" type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"searchName\\\">\\r\\n                  <span *ngIf=\\\"addCustomerTipForm.get('customerName').errors && addCustomerTipForm.get('customerName').touched\\\"\\r\\n                    class=\\\"help-block\\\">!שדה חובה</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-2\\\">\\r\\n                  <a href=\\\"tel:0{{ searchPhone }}\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fas fa-phone\\\"></i></button></a>\\r\\n                </div>\\r\\n                <div *ngIf='!customerSelected' class=\\\"col-xs-4 form-group\\\">\\r\\n                  <input placeholder=\\\"פלאפון/טלפון\\\" formControlName=\\\"customerPhone\\\" type=\\\"number\\\" id=\\\"\\\" class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"searchPhone\\\">\\r\\n                  <span *ngIf=\\\"!addCustomerTipForm.get('customerPhone').valid && addCustomerTipForm.get('customerPhone').touched\\\"\\r\\n                    class=\\\"help-block\\\">!שדה חובה</span>\\r\\n                </div>\\r\\n                <div *ngIf='customerSelected' class=\\\"col-xs-6 form-group\\\" align=center>\\r\\n\\r\\n                  <ng-container *ngIf='!loading'>\\r\\n                    <h1>({{ selectedCustomer.name }})</h1>\\r\\n                  </ng-container>\\r\\n\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"!customerSelected\\\">\\r\\n\\r\\n                  <div *ngIf='currentNetStatus' class=\\\"col-xs-12 form-group\\\" align=center>\\r\\n                    <button data-toggle=\\\"collapse\\\" data-target=\\\"#customerDetails\\\" type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\">הוסף\\r\\n                      חדש</button>\\r\\n                    <div id=\\\"customerDetails\\\" class=\\\"collapse\\\">\\r\\n                      <ng-container>\\r\\n                        <div class=\\\"form-group btn-group btn-toggle\\\" style=\\\"float:right; clear:both;\\\">\\r\\n                          <h2>הביא טיפ</h2>\\r\\n                          <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"!tipped ? 'btn-success':'btn-disabled'\\\" (click)=\\\"onTipped()\\\">כן</button>\\r\\n                          <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"tipped ? 'btn-success':'btn-disabled'\\\" (click)=\\\"onTipped()\\\">לא</button>\\r\\n                        </div>\\r\\n\\r\\n                        <ng-container *ngIf='!tipped'>\\r\\n                          <div class=\\\"col-xs-12 form-group\\\" align=right>\\r\\n                            <h2 align=center>?כמה הביא</h2>\\r\\n                            <input type=\\\"number\\\" formControlName=\\\"customerTip\\\" class=\\\"text-center form-control\\\"\\r\\n                              [(ngModel)]=\\\"tipSelected\\\">\\r\\n                          </div>\\r\\n\\r\\n                        </ng-container>\\r\\n                        <div class=\\\"col-xs-12 form-group\\\" align=center>\\r\\n                          <button class='btn btn-success' [disabled]=\\\"addCustomerTipForm.get('customerName').invalid && !addCustomerTipForm.get('customerPhone').valid\\\">הוסף\\r\\n                            לקוח למערכת</button>\\r\\n                          <div *ngIf=\\\"addCustomerTipForm.get('customerName').invalid\\\" class=\\\"form-group\\\">\\r\\n                            <p style=\\\"color:red;\\\">!לא הוספת שם</p>\\r\\n                          </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"customerSelected\\\">\\r\\n                  <button type=\\\"button\\\" style=\\\"max-width: 100px;\\\" class=\\\"btn btn-warning form-control\\\" (click)=\\\"onUnSelect()\\\">חזרה</button>\\r\\n                </ng-container>\\r\\n                <div *ngIf='!customerSelected' class=\\\"col-xs-12 form-group\\\">\\r\\n\\r\\n                  <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"thead-dark\\\">\\r\\n                      <tr>\\r\\n                        <!-- <th scope=\\\"col\\\"></th> -->\\r\\n                        <th scope=\\\"col\\\">הוסף</th>\\r\\n                        <th scope=\\\"col\\\">ממוצע טיפ</th>\\r\\n                        <th scope=\\\"col\\\">לא הביא</th>\\r\\n                        <th scope=\\\"col\\\">הביא</th>\\r\\n                        <th scope=\\\"col\\\">שם</th>\\r\\n                        <th scope=\\\"col\\\">פלאפון/טלפון</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <ng-container *ngFor=\\\"let customer of allCustomers; let i = index\\\">\\r\\n                        <ng-container *ngIf=\\\"customer | filter:searchPhone:searchName \\\">\\r\\n                          <tr id=\\\"customersTr\\\"  [ngClass]='onGetCustomerColor(customer)' @translateFromL >\\r\\n                            <!-- <td><input name=\\\"checkbox\\\" type='radio' class=\\\"btn btn-primary\\\" (click)=\\\"onAddExistingCustomer(customer)\\\"></td> -->\\r\\n                            <!-- <td></td> -->\\r\\n                            <td ><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAddExistingCustomer(i)\\\"\\r\\n                                [disabled]='!currentNetStatus'>בחר</button></td>\\r\\n                            <td>{{ onGetCustomerAvrg(customer) }}</td>\\r\\n                            <td>{{ customer.notTipped }}</td>\\r\\n                            <td>{{ customer.tipped }}</td>\\r\\n                            <td>{{ customer.name }}</td>\\r\\n                            <td><a class=\\\"btn btn-success w-25\\\" href=\\\"tel:{{customer.phone}}\\\">{{ customer.phone }} <i\\r\\n                                  class=\\\"fas fa-phone\\\"></i> </a></td>\\r\\n                          </tr>\\r\\n                        </ng-container>\\r\\n                      </ng-container>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-12\\\" *ngIf='customerSelected'>\\r\\n                  <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"thead-dark\\\">\\r\\n                      <tr>\\r\\n                        <th scope=\\\"col\\\">עדכן</th>\\r\\n                        <th scope=\\\"col\\\">?כמה הביא</th>\\r\\n                        <th scope=\\\"col\\\">?הביא טיפ</th>\\r\\n                        <th scope=\\\"col\\\">שם</th>\\r\\n                        <th scope=\\\"col\\\">פלאפון/טלפון</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <ng-container *ngIf='loading'>\\r\\n                          <p>...מעדכן</p>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf='!loading'>\\r\\n                          <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCustomerUpdated(updateCustomerTip)\\\">עדכן</button></td>\\r\\n                        </ng-container>\\r\\n                        <td><input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"max-width: 100px;\\\" [disabled]='tipped'\\r\\n                            #updateCustomerTip></td>\\r\\n                        <td><button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"!tipped ? 'btn-success':'btn-disabled'\\\"\\r\\n                            (click)=\\\"onTipped()\\\">כן</button></td>\\r\\n                        <td>{{ selectedCustomer.name }}</td>\\r\\n                        <td>{{ selectedCustomer.phone }}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n\\r\\n                  <p style=\\\"color:red;\\\">{{ tipNotSellected }}</p>\\r\\n                </div>\\r\\n                <ng-container *ngIf='!currentNetStatus'>\\r\\n                  <div align=center>\\r\\n                    <div class=\\\"loader\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n              <div *ngIf='!currentNetStatus' class=\\\"form-group\\\">\\r\\n                <p class=\\\"bg-danger text-danger\\\">אתה לא מחובר לאינטרנט אינך יכול להוסיף או לעדכן לקוחות במאגר </p>\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <hr>\\r\\n        </ng-container>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserServices } from 'src/app/user.services';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CustomerServices } from '../customers.services';\r\nimport { Customer } from '../models/customer.model';\r\nimport { Router } from '@angular/router';\r\nimport { DataStoreServices } from 'src/app/shared/data-storage.services';\r\nimport { Response } from '@angular/http';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { translateFromL } from 'src/app/shared/my-animations';\r\nimport { PublicMsg } from '../models/publicMsg.model';\r\nimport { PublicMsgServices } from 'src/app/shared/PublicMsg.services';\r\n\r\n@Component({\r\n  selector: 'app-add-tip',\r\n  templateUrl: './add-tip.component.html',\r\n  styleUrls: ['./add-tip.component.css'],\r\n  animations : [\r\n    translateFromL\r\n  ]\r\n})\r\nexport class AddTipComponent implements OnInit, OnDestroy {\r\n  randomSuccessMessages: PublicMsg[];\r\n  //  [\r\n  //   'עוד קצת עוד קצת ואתה בטופפפ',\r\n  // 'אחלה תמשיך ככה אולי תגיע למיליון בסוף', 'אחלה לקוח תאמין לי הלוואי הייתי שם במקומך',\r\n  //  'צריך עוד אנשים כאלה בנאדם שבאמת מבין אותנו השליחים',\r\n  //  'איךךך איך הוא הביא לך טיפ כזה אחלה גבר'\r\n  // ];\r\n  randomFaliureMessages: PublicMsg[];\r\n  //  [\r\n  //   'מעולה אולי עד סוף היום יהיה לך מספיק לבירה',\r\n  //   'פעם הבאה תגיד לו לא כולל שירות ימניאק',\r\n  //   'תן ללקוח הזה איזה שתן בתא דואר טפיי חרא של בנאדם',\r\n  //   'לא נורא פעם הבאה תגיע לו בדקה האחרונה הזיין הזה'\r\n  // ];\r\n\r\n  tipStatusStyles;\r\n  successMessage = '';\r\n  failAlert = null;\r\n  successAlert = null;\r\n  error = '';\r\n  loading = false;\r\n  tipSelected: number;\r\n  tipNotSellected = '';\r\n  tipped = true;\r\n  currentNetStatus: Boolean = true;\r\n  currentUserPauch;\r\n  searchPhone = '';\r\n  searchName = '';\r\n  customerSelected = false;\r\n  selectedCustomer;\r\n  selectedCustomerId;\r\n  customerExists = false;\r\n  allCustomers: Customer[];\r\n  addCustomerTipForm: FormGroup;\r\n  constructor(\r\n    private userServices: UserServices,\r\n    private customerServices: CustomerServices,\r\n    private router: Router,\r\n    private dataSotrageServices: DataStoreServices,\r\n    private publicMsgService: PublicMsgServices\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.addCustomerTipForm = new FormGroup({\r\n      'customerName': new FormControl(null, Validators.required),\r\n      'customerPhone': new FormControl(null, Validators.required),\r\n      'customerTip': new FormControl(null, Validators.required),\r\n      'customerTipped': new FormControl(null),\r\n      'customerShit': new FormControl(null),\r\n    });\r\n    this.currentUserPauch = this.userServices.getCurrentPauch();\r\n    this.tipStatusStyles = this.userServices.getTipStatusStyles();\r\n  \r\n    this.publicMsgService.successAlert.subscribe((message) => this.successAlert = message);\r\n    this.publicMsgService.failAlert.subscribe((message) => this.failAlert = message);\r\n\r\n    this.publicMsgService.failMessagesUpdated.subscribe(\r\n      (allMessages: PublicMsg[]) => {\r\n          this.randomFaliureMessages = allMessages;\r\n      }\r\n      );\r\n\r\n    this.publicMsgService.successMessagesUpdated.subscribe(\r\n      (allMessages: PublicMsg[]) => {\r\n        this.randomSuccessMessages = allMessages;\r\n        console.log(allMessages);\r\n      }\r\n      );\r\n      // todo this.dataSotrageServices.storeFailAlertMessages().\r\n      // subscribe(\r\n      //   (response: Response) => {\r\n      //    this.successMessage = '!עודכן בהצלחה';\r\n      //    // todo make the response create success message!\r\n      //   });\r\n      this.dataSotrageServices.fetchFailAlertMessages();\r\n      this.dataSotrageServices.fetchSuccessAlertMessages();\r\n    this.customerServices.customersUpdated.subscribe((customers: Customer[]) => {\r\n      this.allCustomers = customers;\r\n      // todo make it observable when it notices user is offline then it will get the localstorage\r\n      // todo if there is one.\r\n    });\r\n    if (this.allCustomers == null) {\r\n      this.dataSotrageServices.fetchCustomers();\r\n    }\r\n    this.customerServices.netStatus.subscribe(\r\n      (status: Boolean) => {\r\n        this.currentNetStatus = status;\r\n      });\r\n\r\n      this.customerServices.successMessage.subscribe(\r\n        (successMessage: string) => {\r\n          this.successMessage = successMessage;\r\n        }\r\n      );\r\n      this.customerServices.errorMessage.subscribe(\r\n        (message: string) => {\r\n          this.successMessage = null;\r\n          this.error = message;\r\n        }\r\n      );\r\n  }\r\n  onTipped() {\r\n    this.tipped = !this.tipped;\r\n  }\r\n  onGetCustomerColor(customer: Customer) {\r\n    const result = Number(this.onGetCustomerAvrg(customer));\r\n    if (result <= 5) {\r\n      return 'bg-danger text-danger';\r\n    } else if (result < 10) {\r\n      return 'bg-warning text-secondary';\r\n    } else if (result <= 20) {\r\n      return 'bg-info text-success';\r\n    } else if (result > 20) {\r\n      return 'bg-success text-gold font-weight-bold';\r\n    }\r\n  }\r\n\r\n  onAddExistingCustomer(index: number) {\r\n    this.selectedCustomerId = index;\r\n    this.selectedCustomer = this.allCustomers[index];\r\n    this.addCustomerTipForm.get('customerName').setValue(this.selectedCustomer.name);\r\n    this.addCustomerTipForm.get('customerPhone').setValue(this.selectedCustomer.phone);\r\n    this.customerSelected = true;\r\n  }\r\n\r\n  // onCustomerUpdated(tip) {\r\n  //   this.loading = true;\r\n  //   if (this.tipped && confirm('?אתה בטוח שאתה רוצה לעדכן שהלקוח לא הביא טיפ')) { // it will fire if tipped is not sellected\r\n  //     // todo make it submit customer update without tip\r\n  //     const editableCustomer = this.selectedCustomer;\r\n  //     const currentCustomerTotalNotTipped =  Number(editableCustomer.notTipped) + 1;\r\n  //     editableCustomer.notTipped = currentCustomerTotalNotTipped;\r\n  //     this.allCustomers[this.selectedCustomerId] = editableCustomer;\r\n  //     this.customerServices.updateCustomers(this.allCustomers);\r\n  //     this.dataSotrageServices.storeCustomers().\r\n  //     subscribe(\r\n  //       (response: Response) => {\r\n  //         if (response.json != null) {\r\n\r\n  //           this.successMessage = '!עודכן בהצלחה';\r\n  //           setTimeout(() => {\r\n  //             this.setMessage(tip.value);\r\n  //           }, 400);\r\n  //         } else {\r\n  //           this.error = 'ואללק איש יקר. סליחה אבל יש איזה תקלה';\r\n  //         }\r\n  //        // todo make the response create success message!\r\n  //       });\r\n  //   } else {\r\n  //   this.loading = false;\r\n  //   }\r\n  //   // it will fire if tipped is sellected\r\n  //   if (!this.tipped && confirm('אתה בטוח שאתה רוצה לעדכן שהלקוח הביא לך טיפ של' + tip.value)) {\r\n  //     this.loading = true;\r\n  //     if (tip.value == '') {\r\n  //       // todo make it return error that tip is empty\r\n  //       this.tipNotSellected = 'You Need To Add Tip If You Choosed Customer Tipped!';\r\n  //       return;\r\n  //     } else {\r\n  //       this.tipNotSellected = '';\r\n  //       const editableCustomer = this.selectedCustomer;\r\n  //       const currentCustomerTipped =  Number(editableCustomer.tipped) + 1;\r\n  //       const currentCustomerTotal =    Number(editableCustomer.totalTip) + Number(tip.value);\r\n  //       editableCustomer.tipped = currentCustomerTipped;\r\n  //       editableCustomer.totalTip = currentCustomerTotal;\r\n  //       this.allCustomers[this.selectedCustomerId] = editableCustomer;\r\n  //       this.customerServices.updateCustomers(this.allCustomers);\r\n  //       this.userServices.onAddIncome(Number(tip.value));\r\n  //       this.currentUserPauch = this.userServices.getCurrentPauch();\r\n  //       this.dataSotrageServices.storeCustomers().\r\n  //       subscribe(\r\n  //         (response: Response) => {\r\n  //           this.successMessage = '!עודכן בהצלחה';\r\n  //           setTimeout(() => {\r\n  //             console.log(tip.value);\r\n              \r\n  //             this.setMessage(tip.value);\r\n  //           }, 400);\r\n  //           // todo make the response create success message!\r\n  //         }\r\n  //         );\r\n  //       }\r\n  //         // todo make it submit the update\r\n  //       }\r\n  //     }\r\n  //     // let editableCustomer = this.selectedCustomer;\r\n  //     // console.log(editableCustomer.name);\r\n  //   // this.customerServices.addUpdateToCustomer();\r\n  // onUnSelect() {\r\n  //   this.customerSelected = false;\r\n  // }\r\n\r\n  onGetCustomerAvrg(customer: Customer) {\r\n  const totalTipTimes = Number(customer.tipped) + Number(customer.notTipped);\r\n  const result = Number(customer.totalTip) / totalTipTimes;\r\n  return result.toFixed(2);\r\n  }\r\n\r\n  onAddIncome(income: number) {\r\n    this.userServices.onAddIncome(income);\r\n    this.currentUserPauch = this.userServices.getCurrentPauch();\r\n  }\r\n\r\n  onCustomerAdded() {\r\n    // todo make the tip and customer add\r\n    const tip = this.addCustomerTipForm.get('customerTip').value;\r\n    this.customerServices.addSuccessMsg('...טוען נתונים');\r\n    if (!this.customerServices.checkIfCustomerExists(this.addCustomerTipForm.get('customerPhone').value)) {\r\n      const customer = new Customer(\r\n        this.addCustomerTipForm.get('customerName').value,\r\n        '0' + this.addCustomerTipForm.get('customerPhone').value.toString(),\r\n        !this.tipped ? '1' : '0', this.tipped ? '1' : '0',\r\n        '23',\r\n        this.addCustomerTipForm.get('customerTip').value > 0 ? this.addCustomerTipForm.get('customerTip').value : '0'\r\n        );\r\n      this.dataSotrageServices.storeCustomers(customer, tip);\r\n      this.userServices.onAddIncome(tip);\r\n      this.currentUserPauch = this.userServices.getCurrentPauch();\r\n    } else {\r\n      this.error = '!לקוח קיים כבר! בחר בהוסף ועדכן';\r\n      return;\r\n    }\r\n  }\r\n\r\n  onDisableAlertMessage() {\r\n    this.successMessage = null;\r\n    // this.alertMessage.message = null;\r\n    this.router.navigate(['./']);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('ngOnDestroy Was Fired! In add-tip');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div align=center class=\\\"form-group\\\">\\r\\n  <h1>הרמה שלך</h1>\\r\\n  <p>({{ userCurrentLevel }})</p>\\r\\n</div>\\r\\n<hr>\\r\\n<div align=center class=\\\"form-group\\\">\\r\\n  <h2>בפאוץ שלך כרגע</h2>\\r\\n <p [ngStyle]=\\\"{'color':userServices.getCurrentPauchStyle()}\\\">({{ userCurrentPauch }})</p>\\r\\n</div>\\r\\n<hr>\\r\\n\\r\\n<div class=\\\"form-group\\\" align=center>\\r\\n  <button class=\\\"btn btn-success\\\" routerLink=\\\"/add-tip\\\">הוסף טיפ ועדכן לקוח</button>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n  <div align=center class=\\\"form-group\\\">\\r\\n    <h2>בדוק כמה יוצא לך לשעה</h2>\\r\\n    <div class=\\\"dropdown\\\" align=center>\\r\\n        <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          Dropdown\\r\\n        </button>\\r\\n\\r\\n            <!-- ! dropdown -->\\r\\n\\r\\n        <div  class=\\\"dropdown-menu\\\" align=center>\\r\\n          \\r\\n            <div class=\\\"form-group\\\" align=center>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <span>?כמה אתה עושה לשעה</span>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                <input align=center  type=\\\"number\\\" class=\\\"form-control text-center\\\" [(ngModel)]=\\\"userHourPayed\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <span>?כמה שעות אתה עובד</span>\\r\\n                </div>\\r\\n                <input align=center  type=\\\"number\\\" class=\\\"form-control text-center\\\" [(ngModel)]=\\\"userWorkHours\\\">\\r\\n              </div>\\r\\n             \\r\\n            </div>\\r\\n            <!-- ! end of dropdown -->\\r\\n\\r\\n        </div>\\r\\n      </div> \\r\\n      <div class=\\\"form-group\\\" align=center>\\r\\n          <h2>הוסף הודעות רנדומליות לעידוד</h2>\\r\\n          <button routerLink='add-random-msg' class=\\\"btn btn-warning\\\">לחץ כאן</button>\\r\\n        </div>\\r\\n      <div *ngIf='userHourPayed && userWorkHours' class=\\\"form-group\\\" align=center>\\r\\n        <p>אתה עושה לשעה</p>\\r\\n        <p *ngIf=\\\"userHourPayed && userWorkHours\\\">({{ getCurrentHourlyPayed() }})</p>\\r\\n      </div>\\r\\n    \\r\\n  <hr>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserServices } from 'src/app/user.services';\r\nimport { trigger, transition, style, animate, state } from '@angular/animations';\r\nimport { translateFromL } from 'src/app/shared/my-animations';\r\n\r\n@Component({\r\n  selector: 'app-current-status',\r\n  templateUrl: './current-status.component.html',\r\n  styleUrls: ['./current-status.component.css'],\r\n  animations: [\r\n    translateFromL\r\n  ]\r\n})\r\nexport class CurrentStatusComponent implements OnInit {\r\n\r\n  userCurrentPauch;\r\n  userCurrentLevel;\r\n  userHourPayed;\r\n  userWorkHours;\r\n\r\n  constructor(private userServices: UserServices) { }\r\n\r\n  ngOnInit() {\r\n    this.userCurrentPauch = this.userServices.getCurrentPauch();\r\n    this.getUserLevel();\r\n  }\r\n\r\n  getUserLevel() {\r\n    if (this.userCurrentPauch < 20) {\r\n      this.userCurrentLevel = 'חור בפאוץ';\r\n    }\r\n\r\n    if (this.userCurrentPauch < 40) {\r\n      this.userCurrentLevel = 'מתחיל את היום';\r\n    }\r\n    if (this.userCurrentPauch > 60) {\r\n      this.userCurrentLevel = 'מתקדם';\r\n    }\r\n    if (this.userCurrentPauch > 100) {\r\n      this.userCurrentLevel = 'תותח';\r\n    }\r\n  }\r\n\r\n  getCurrentHourlyPayed() {\r\n  const totalDayHourlyPayed = this.userWorkHours * this.userHourPayed;\r\n  const totalPauchAndHour = totalDayHourlyPayed + this.userCurrentPauch;\r\n  const totalPayed = totalPauchAndHour / this.userWorkHours;\r\n  return totalPayed.toFixed(2);\r\n  }\r\n\r\n}\r\n","import { Customer } from './models/customer.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport class CustomerServices {\r\n\r\n  successMessage = new Subject<string>();\r\n  errorMessage = new Subject<string>();\r\n  netStatus = new Subject<Boolean>();\r\n  customersUpdated = new Subject<Customer[]>();\r\n\r\n  allCustomers: Customer[] = [];\r\n\r\n\r\n  getAllCustomers() {\r\n    // todo make it posible to save data when offline\r\n    // if (localStorage.getItem('customers')) {\r\n    //   return JSON.parse(localStorage.getItem('customers'));\r\n    // }\r\n    return this.allCustomers;\r\n  }\r\n\r\n  checkIfCustomerExists(phoneNum) {\r\n    for (const customer of this.allCustomers) {\r\n      if (customer && customer.phone != null && customer.phone.match(phoneNum)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addCustomer(customer: Customer) {\r\n    this.allCustomers.push(customer);\r\n  }\r\n\r\n  setCustomers(updatedCustomers: Customer[]) {\r\n    this.allCustomers = updatedCustomers;\r\n    this.customersUpdated.next(this.allCustomers);\r\n  }\r\n\r\n  setNetWorkStatus(status: boolean) {\r\n    this.netStatus.next(status);\r\n  }\r\n\r\n  getNetWorkStatus() {\r\n    return this.netStatus;\r\n  }\r\n\r\n  setLocalStorage() {\r\n    // for offline couses\r\n    const currentCustomers = JSON.stringify(this.allCustomers);\r\n    localStorage.setItem('customers', currentCustomers);\r\n  }\r\n\r\n  updateCustomers(customers: Customer[]) {\r\n    this.allCustomers = customers;\r\n  }\r\n\r\n  addSuccessMsg(message: string) {\r\n    this.successMessage.next(message);\r\n  }\r\n\r\n  addErrorMsg(message: string) {\r\n    this.errorMessage.next(message);\r\n  }\r\n\r\n  addUpdateToCustomer(customer: Customer) {\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/sign-in']);\r\n    }\r\n  }\r\n\r\n}\r\n","export class Customer {\r\n  // {name: 'ירוחם', street: 'הרב ברלין', house: 12, apartment: 4, tipped: 3, notTipped: 0},\r\n  constructor(\r\n    public name: string,\r\n    public phone: string,\r\n    public tipped: string,\r\n    public notTipped: string,\r\n    public averageTip: string,\r\n    public totalTip: string\r\n    ) {}\r\n}\r\n","export class PublicMsg {\r\n\r\n    constructor(public message: string) {}\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>יעודכן בהמשך</h1>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-edit',\r\n  templateUrl: './profile-edit.component.html',\r\n  styleUrls: ['./profile-edit.component.css']\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class NavigationServices {\r\n  constructor(private router: Router) {}\r\n\r\n  onNavigateForward(link: string) {\r\n    this.router.navigate([this.router.url, link]);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Page Not Found!</h1>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.css']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { PublicMsg } from '../main-page/models/publicMsg.model';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport class PublicMsgServices {\r\n\r\n    publicRandomFailMsg: PublicMsg[] = [];\r\n    publicRandomSuccessMsg: PublicMsg[] = [];\r\n    successAlert = new Subject();\r\n    failAlert = new Subject();\r\n    successMessagesUpdated = new Subject();\r\n    failMessagesUpdated = new Subject();\r\n\r\n    getAllFailMessages() {\r\n        return this.publicRandomFailMsg;\r\n    }\r\n\r\n    getAllSuccessMessages() {\r\n        return this.publicRandomSuccessMsg;\r\n    }\r\n\r\n    addFailMessage(message: PublicMsg) {\r\n        this.publicRandomFailMsg.push(message);\r\n        this.failMessagesUpdated.next(this.publicRandomFailMsg);\r\n    }\r\n\r\n    addSuccessMessage(message: PublicMsg) {\r\n        this.publicRandomSuccessMsg.push(message);\r\n        this.successMessagesUpdated.next(this.publicRandomSuccessMsg);\r\n    }\r\n\r\n    setFailMessages(publicMsg: PublicMsg[]) {\r\n      this.publicRandomFailMsg = publicMsg;\r\n      this.failMessagesUpdated.next(this.publicRandomFailMsg);\r\n    }\r\n\r\n    setSuccessMessages(publicMsg: PublicMsg[]) {\r\n        this.publicRandomSuccessMsg = publicMsg;\r\n        this.successMessagesUpdated.next(this.publicRandomSuccessMsg);\r\n    }\r\n    setOnAddTipMessage(tip) {\r\n      const ammount = tip != null ? tip : '0';\r\n      const numFa =  Math.floor(Math.random() * this.publicRandomFailMsg.length);\r\n      const numSu =  Math.floor(Math.random() * this.publicRandomSuccessMsg.length);\r\n       if (ammount === '0') {\r\n         this.failAlert.next(this.publicRandomFailMsg[numFa].message);\r\n       } else {\r\n         this.successAlert.next(this.publicRandomSuccessMsg[numSu].message);\r\n       }\r\n    }\r\n}\r\n","import { Http, Response } from '@angular/http';\r\nimport { CustomerServices } from '../main-page/customers.services';\r\nimport { Injectable, ErrorHandler, OnDestroy } from '@angular/core';\r\nimport { Customer } from '../main-page/models/customer.model';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { PublicMsgServices } from './PublicMsg.services';\r\nimport {  Subject, Subscription } from 'rxjs';\r\nimport { PublicMsg } from '../main-page/models/publicMsg.model';\r\nimport { UserAlertServices } from './user-alert.services';\r\nimport { Options } from 'selenium-webdriver/ie';\r\n\r\n@Injectable()\r\nexport class DataStoreServices implements OnDestroy {\r\n    subscription: Subscription;\r\n    getSubscription: Subscription;\r\n    tempCustomersDownloaded: Subject<Customer[]>;\r\n    constructor( private http: Http,\r\n      private customerServices: CustomerServices,\r\n      private publicMsgServices: PublicMsgServices,\r\n      private authServices: AuthService,\r\n      private userAlertServices: UserAlertServices\r\n      ) {}\r\n\r\n    storeCustomers(customer: Customer, tip) {\r\n      this.tempCustomersDownloaded = new Subject();\r\n      const token =  this.authServices.getToken();\r\n      this.tempCustomersDownloaded.subscribe(\r\n        (dbCustomers: Customer[]) => {\r\n          dbCustomers.push(customer);\r\n          this.customerServices.setCustomers(dbCustomers);\r\n          this.getSubscription = this.http.put(\r\n            'https://jerusalem-runners.firebaseio.com/customers.json?auth=' + token, dbCustomers).subscribe(\r\n            (response: Response) => {\r\n              // todo fix the some kind of subscription there!\r\n          },\r\n          (error: ErrorHandler) => {\r\n            this.customerServices.addErrorMsg('הסנכרון לא הוצלח בהצלחה :( אנא נסה שנית תודה');\r\n            this.ngOnDestroy();\r\n          },\r\n          () => {\r\n            this.customerServices.addSuccessMsg('!הלקוח הועלה למאגר בהצלחה');\r\n            this.publicMsgServices.setOnAddTipMessage(tip);\r\n            this.ngOnDestroy();\r\n          }\r\n        );\r\n      });\r\n      this.fetchCurrnetCustomers();\r\n    }\r\n\r\n    fetchCurrnetCustomers() {\r\n      const token =  this.authServices.getToken();\r\n      this.subscription = this.http.get('https://jerusalem-runners.firebaseio.com/customers.json?auth=' + token).\r\n      subscribe(\r\n        (response: Response) => {\r\n            const customers: Customer[] = response.json();\r\n            this.tempCustomersDownloaded.next(customers);\r\n          },\r\n      (error: ErrorHandler) => {\r\n       this.customerServices.addErrorMsg('תקלה במערכת אנא רענן את הדף');\r\n        this.customerServices.setNetWorkStatus(false);\r\n      },\r\n      () => this.subscription.unsubscribe()\r\n      );\r\n    }\r\n\r\n    fetchCustomers() {\r\n      const token =  this.authServices.getToken();\r\n      return this.http.get('https://jerusalem-runners.firebaseio.com/customers.json?auth=' + token).\r\n      subscribe(\r\n        (response: Response) => {\r\n          const customers: Customer[] = response.json();\r\n          this.customerServices.setCustomers(customers);\r\n          this.customerServices.setNetWorkStatus(true);\r\n          },\r\n      (error: Error) => {\r\n        this.customerServices.addErrorMsg('תקלה! :( ! אנא התחבר מחדש תודה');\r\n        this.customerServices.setNetWorkStatus(false);\r\n      });\r\n    }\r\n\r\n    storeSuccessAlertMessages(message: PublicMsg) {\r\n      this.userAlertServices.addSuccessMsg('...טוען');\r\n      const token = this.authServices.getToken();\r\n      this.http.\r\n      post('https://jerusalem-runners.firebaseio.com/publicSuccessAlertMessages.json?auth=' + token, message)\r\n      .subscribe(\r\n        (response: Response) => {\r\n        this.publicMsgServices.addSuccessMessage(message);\r\n          this.userAlertServices.addSuccessMsg('נשלח ונשמר בהצלחה תודה');\r\n      },\r\n      (error: ErrorHandler) => this.userAlertServices.addErrorMsg('אופסי דייזי משהו השתבש לנו ')\r\n      );\r\n    }\r\n\r\n    storeFailAlertMessages(message: PublicMsg) {\r\n      this.userAlertServices.addSuccessMsg('...טוען');\r\n      const token = this.authServices.getToken();\r\n      this.http.\r\n      post('https://jerusalem-runners.firebaseio.com/publicFailAlertMessages.json?auth=' + token, message)\r\n      .subscribe(\r\n        (response: Response) => {\r\n          this.publicMsgServices.addFailMessage(message);\r\n          this.userAlertServices.addSuccessMsg('נשלח ונשמר בהצלחה תודה');\r\n      },\r\n      (error: ErrorHandler) => this.userAlertServices.addErrorMsg('אופסי דייזי משהו השתבש לנו ')\r\n      );\r\n    }\r\n\r\n\r\n    fetchFailAlertMessages() {\r\n      const token =  this.authServices.getToken();\r\n      return this.http.get('https://jerusalem-runners.firebaseio.com/publicFailAlertMessages.json?auth=' + token).\r\n      subscribe(\r\n        (response: Response) => {\r\n          if (response.json() !== null) {\r\n            const publicMsg: PublicMsg[] = response.json();\r\n            const resultsArr: PublicMsg[] = [];\r\n            Object.keys(publicMsg).map(\r\n              (key) => {\r\n                resultsArr.push(new PublicMsg(publicMsg[key].message));\r\n              });\r\n            this.publicMsgServices.setFailMessages(resultsArr);\r\n          } else {\r\n            this.customerServices.setNetWorkStatus(true);\r\n          }\r\n      },\r\n      (error: Error) => {\r\n        this.customerServices.addErrorMsg('תקלה!! אנא התחבר מחדש תודה');\r\n        this.customerServices.setNetWorkStatus(false);\r\n      });\r\n    }\r\n\r\n    fetchSuccessAlertMessages() {\r\n      const token =  this.authServices.getToken();\r\n      return this.http.get('https://jerusalem-runners.firebaseio.com/publicSuccessAlertMessages.json?auth=' + token).\r\n      subscribe(\r\n        (response: Response) => {\r\n          if (response.json() !== null) {\r\n            const publicMsg: PublicMsg[] = response.json();\r\n            const resultsArr: PublicMsg[] = [];\r\n            Object.keys(publicMsg).map(\r\n              (key) => {\r\n                resultsArr.push(new PublicMsg(publicMsg[key].message));\r\n              });\r\n            this.publicMsgServices.setSuccessMessages(resultsArr);\r\n          } else {\r\n            this.customerServices.setNetWorkStatus(true);\r\n          }\r\n      },\r\n      (error: Error) => {\r\n        this.customerServices.addErrorMsg('תקלה!! אנא התחבר מחדש תודה');\r\n        this.customerServices.setNetWorkStatus(false);\r\n      });\r\n    }\r\n    ngOnDestroy() {\r\n      this.subscription.unsubscribe();\r\n      this.getSubscription.unsubscribe();\r\n      this.tempCustomersDownloaded.unsubscribe();\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Customer } from '../main-page/models/customer.model';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(customer, search: string, searchName: string) {\r\n      if (customer && customer.phone != null && customer.phone.match(search) && search > '10') {\r\n        return customer;\r\n    } else if (customer && customer.name != null &&\r\n       searchName && customer.name.match(searchName)) {\r\n        return customer;\r\n    }\r\n  }\r\n\r\n}\r\n","import { trigger, state, style, transition, animate } from '@angular/animations';\r\nexport let translateFromL = trigger('translateFromL', [\r\n    state('void', style({\r\n        opacity: '0',\r\n        transform: 'translateX(1500px)',\r\n    })),\r\n    transition(':enter, :leave', [\r\n        animate(300)\r\n    ]),\r\n]);\r\n","import { Subject } from 'rxjs';\r\n\r\nexport class UserAlertServices {\r\n    successMsgAdded: Subject<string> = new Subject();\r\n    errorMsgAdded: Subject<string> = new Subject();\r\n\r\n    addSuccessMsg(message: string) {\r\n        this.successMsgAdded.next(message);\r\n    }\r\n\r\n    addErrorMsg(message: string) {\r\n        this.errorMsgAdded.next(message);\r\n    }\r\n\r\n}\r\n","import { OnInit } from '@angular/core';\r\n\r\nexport class UserServices implements OnInit {\r\n  currentPauch = 0;\r\n  tipStatusStyles = ['red', 'orange', 'green'];\r\n\r\n  getCurrentPauchStyle() {\r\n    if (this.currentPauch < 40) {\r\n      return this.tipStatusStyles[0];\r\n    }\r\n    if (this.currentPauch < 60) {\r\n      return this.tipStatusStyles[1];\r\n    }\r\n    if (this.currentPauch >= 60) {\r\n      return this.tipStatusStyles[2];\r\n    }\r\n  }\r\n\r\n  getCurrentPauch() {\r\n    if (localStorage.getItem('pauch')) {\r\n      const pauch = localStorage.getItem('pauch');\r\n     return this.currentPauch = Number(pauch);\r\n    } else {\r\n      return this.currentPauch = Number(0);\r\n    }\r\n  }\r\n\r\n  getTipStatusStyles() {\r\n    return this.tipStatusStyles;\r\n  }\r\n\r\n  onAddIncome(income: number) {\r\n    if (income > 0) {\r\n      this.currentPauch += income;\r\n      localStorage.setItem('pauch', this.currentPauch.toString());\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}